[versions]
agp = "8.5.2"
appcompat = "1.7.0"
kotlin = "2.0.0"
compose = "1.6.10"
compose-material3 = "1.2.1"

compose-test-rule = "1.6.8"
androidx-activity ="1.9.1"
androidx-fragment ="1.8.2"
compose-plugin = "1.7.0-alpha02"

koin = "3.5.6"
kotlinBrowser = "1.0.0-pre.752"
ktor = "2.3.12"
kstore = "0.7.2"
essenity = "2.0.0"
molecule = "1.2.0"
decompose = "3.0.0"
jetbrain_jvm = "1.8.0"
koin_compose = "1.0.4"
google-services = "4.4.0"
kotlin_datetime = "0.4.0"
decompose-router = "0.8.0"
coroutines_version = "1.7.3"
google-services-map = "0.16.1"
kotlinx-serialization = "1.6.3"
calendar-compose-ranges = "1.0.5"
androidx-activityCompose = "1.9.1"

sql_delight = "2.0.0"
material3_window = "1.1.2"
swipe_refresh = "0.31.4-beta"
qdsfdhvh-image-loader = "1.5.1"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
kotlin-browser = { module = "org.jetbrains.kotlin-wrappers:kotlin-browser", version.ref = "kotlinBrowser" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }

androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }


compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-test-rule" }
compose-ui-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-test-rule" }

koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin_compose" }
kotlin-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlin_datetime" }
kotlin-corotines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines_version" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

calendar-compose-basis = { module = "io.github.epicarchitect:calendar-compose-basis", version.ref = "calendar-compose-ranges" }
calendar-compose-pager = { module = "io.github.epicarchitect:calendar-compose-pager", version.ref = "calendar-compose-ranges" }
calendar-compose-ranges = { module = "io.github.epicarchitect:calendar-compose-ranges", version.ref = "calendar-compose-ranges" }
calendar-compose-datepicker = { module = "io.github.epicarchitect:calendar-compose-datepicker", version.ref = "calendar-compose-ranges" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }

molecule-runtime = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }
decompose-router = { module = "io.github.xxfast:decompose-router", version.ref = "decompose-router" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }

google-services-map = { module = "com.google.maps:google-maps-services", version.ref = "google-services-map" }

kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
koin_core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin_android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koltin-gradle = { module ="org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin_serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-storage = { module = "io.github.xxfast:kstore-storage", version.ref = "kstore" }

ktor_core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor_logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor_client_ios = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor_client_okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor_serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }

molecule-gradle-plugin = { module = "app.cash.molecule:molecule-gradle-plugin", version.ref = "molecule" }

qdsfdhvh-image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "qdsfdhvh-image-loader" }

sql-delight_ios = { group = "app.cash.sqldelight", name = "native-driver", version.ref = "sql_delight" }
sql-delight_android = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sql_delight" }
sql-delight-coroutines-extension = { group = "app.cash.sqldelight", name = "coroutines-extensions", version.ref = "sql_delight" }

[plugins]
androidLibrary = { id = "com.android.library", version.ref = "agp" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
